
#note-show
  .container
    .row.py-5
      .this-note.col-md-9
        .page
          .unit-head
            .info-action.row
              .actions
                %nav.nav
                  - if can? :update, @note
                    = link_to "Edit", edit_note_path(@note), class: "nav-link note-edit-action"
                    = link_to "Delete", note_path(@note), method: :delete, data: { confirm: "Are you sure? Deleting your note is irreversible." }, class: "nav-link note-delete-action"
              %ol.breadcrumb
                %li.breadcrumb-item
                  = link_to "Class #{@note.grade.name.humanize}", notes_url(:grade => @note.grade.name)
                %li.breadcrumb-item
                  = link_to @note.category.name.humanize, notes_url(:grade => @note.grade.name, :category => @note.category.name)
                %li.breadcrumb-item
                  = link_to @note.chapter.name, notes_url(:grade => @note.grade.name, :category => @note.category.name, :chapter => @note.chapter.id)
            .headline
              .col-md-8.heading
                %h1.unit-name.mb-0.mt-1= @note.title
              .col-md-4.image
                = image_tag @note.image.url(:small)

            -# .objective.row
            -#   %ul.items
            -#     - @note.tags.each do |tag|
            -#       %li
            -#         %i.fas.fa-check-square-o
            -#         = tag

          .head-nav
            .col-md-12
              %nav.nav.justify-content-center
                - if user_signed_in?
                  %button.n-upvote.nav-link.first{:id => "#{@note.id}@#!"}
                    %i.fa.fa-heart
                    %span.thanks-count= pluralize(@note.get_upvotes.size, "Thank")
                - else
                  = link_to new_user_session_path, class: "nav-link first mb-0" do
                    %i.fa.fa-heart
                    %span.thanks-count= pluralize(@note.get_upvotes.size, "Thank")
                %p.nav-link.mb-0
                  %i.fa.fa-comments
                  = pluralize(@note.questions.count, "Question")
                %p.nav-link.mb-0
                  %i.fa.fa-eye
                  = pluralize(@note.view, "View")
                %button.print-note.nav-link
                  %i.fa.fa-print
                  Print Note
                %p.nav-link.mb-0
                  %i.fa.fa-share-alt
                  by
                  = link_to @note.user.name, @note.user
                  = time_ago_in_words(@note.created_at)
                  ago

          .unit-body
            = simple_format(@note.body, {}, :sanitize => false)
            .ad
              = image_tag 'adhere.png'
            .tags
              = link_to search_url(:query => @note.grade.name), class: "tag" do
                %i.fa.fa-hashtag
                = @note.grade.name
              = link_to search_url(:query => @note.category.name), class: "tag" do
                %i.fa.fa-hashtag
                = @note.category.name
              = link_to search_url(:query => @note.chapter.name), class: "tag" do
                %i.fa.fa-hashtag
                = @note.chapter.name

            %p.paper-message Visit www.askmattrab.com for more academic resources.

        .page-discussions.mb-5
          %h2.title.mb-3 Discussions
          .ask
            .question-form.form
              - if user_signed_in?
                - if can? :create, Question
                  = render "questions/inlineform"
                - else
                  %p= 'You cannot create questions.'
              - else
                %p.login-msg
                  = 'Please '
                  = link_to "Sign In", new_user_session_path
                  = 'to ask your question.'
          .qa-threads
            - @questions.each do |question|
              = render 'questions/inlinequestion', question: question

      .random-notes.col-md-3
        .rn-wrap.mb-5
          -# %h3.title.mb-3 Related Notes
          .random-note
            = link_to (image_tag @random_note.image.url(:small)), @random_note, class: 'img-note'
            .note_content
              %p.info.mb-2
                = @random_note.user.name
                = 'â€¢'
                = @random_note.category.name.capitalize
              %h2.title= link_to @random_note.title, @random_note
              %p.body
                = truncate sanitize(@random_note.body, tags: ['<h1>', '<h2>', '<h3>', '<a>', '<p>', '<span>', '<div>', '<img>']), length: 150
              %p.buttons
                %span
                  %i.fa.fa-comments-o
                  = pluralize(@random_note.questions.count, "Question")
                %span
                  %i.fa.fa-thumbs-o-up
                  = pluralize(@random_note.get_upvotes.size, "Like")
                %span
                  %i.fa.fa-eye
                  = pluralize(@random_note.view, "View")

          .author.justify-content-center
            .user-main
              .user-avater
                = link_to (image_tag @note.user.avatar_address(:medium)), @note.user
              .user-name
                = link_to @note.user.name, @note.user, class: 'name'
            .user-info
              %p.about.mb-2= truncate @note.user.about, length: 150
              %p.has
                %i.fa.fa-link
                = "Has #{pluralize(@note.user.followers.count, 'Follower')}"
