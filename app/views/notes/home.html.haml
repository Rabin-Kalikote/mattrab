
.banner
  .banner-content
    %nav.grade-nav
      %ul.grade-list
        - if user_signed_in?
          - Grade.all.each do |grade|
            %li.grade-item{class: "#{grade == current_user.grade ? 'active' : ' '}"}
              = link_to grade.name.humanize, "#", class: "grade-link", id: grade.name
        - else
          - Grade.all.each do |grade|
            %li.grade-item{class: "#{grade == Grade.all.first ? 'active' : ' '}"}
              = link_to grade.name.humanize, "#", class: "grade-link", id: grade.name

.sticky-subnav
  .subnav-row
    .twelve.columns
      - if user_signed_in?
        - Grade.all.each do |grade|
          %ul.sticky-subnav-list.category-list.category-list{:id=>grade.name, class: "#{grade == current_user.grade ? 'active' : ' '}"}
            - grade.categories.each do |category|
              %li.cat-item.category-item
                = link_to notes_url(:grade=>"#{grade.name}", :category=>"#{category.name}", :chapter=>"#{category.chapters.first.try(:id)}") do
                  %i.fa{class: "fa-#{@icons[category.name]}"}
                  = category.name.humanize
      - else
        - Grade.all.each do |grade|
          %ul.sticky-subnav-list.category-list.category-list{:id=>grade.name, class: "#{grade == Grade.all.first ? 'active' : ' '}"}
            - grade.categories.each do |category|
              %li.cat-item.category-item
                = link_to notes_url(:grade=>"#{grade.name}", :category=>"#{category.name}", :chapter=>"#{category.chapters.first.try(:id)}") do
                  %i.fa{class: "fa-#{@icons[category.name]}"}
                  = category.name.humanize

#feed-assets
  .container
    .row.fa-row
      .col-12.col-sm-12.col-md-3.col-lg-3.d-none.d-lg-block.menu-col
        .mattrabians.sticky-in-desktop
          .users-around
            -# %h3.mb-3
            -#   %i.fas.fa-users
            -#   Mattrabians around you
            - @top_creators.each do |top_creator|
              .mattrabian-info
                .user-avater
                  = link_to (image_tag top_creator.avatar_address(:medium)), top_creator
                .user-info
                  = link_to top_creator do
                    %span.name= top_creator.name
                  %span.info= 'Top Creator'
                .options
                  - if user_signed_in?
                    - if current_user != top_creator
                      - if !current_user.following?(top_creator)
                        = form_for(current_user.active_relationships.build) do |f|
                          = hidden_field_tag :followed_id, top_creator.id
                          = f.submit "Follow", class: "follow"
                      - else
                        = form_for(current_user.active_relationships.find_by(followed_id: top_creator.id), html: { method: :delete }) do |f|
                          = f.submit "Unfollow", class: "follow"
                    - else
                      = link_to "Settings", edit_user_registration_path, class: 'follow'
                  - else
                    = link_to "Follow", new_user_session_path, class: "follow"
            - @top_learners.each do |top_learner|
              .mattrabian-info
                .user-avater
                  = link_to (image_tag top_learner.avatar_address(:medium)), top_learner
                .user-info
                  = link_to top_learner do
                    %span.name= top_learner.name
                  %span.info= 'Top Learner'
                .options
                  - if user_signed_in?
                    - if current_user != top_learner
                      - if !current_user.following?(top_learner)
                        = form_for(current_user.active_relationships.build) do |f|
                          = hidden_field_tag :followed_id, top_learner.id
                          = f.submit "Follow", class: "follow"
                      - else
                        = form_for(current_user.active_relationships.find_by(followed_id: top_learner.id), html: { method: :delete }) do |f|
                          = f.submit "Unfollow", class: "follow"
                    - else
                      = link_to "Settings", edit_user_registration_path, class: 'follow'
                  - else
                    = link_to "Follow", new_user_session_path, class: "follow"
            - @recent_users.each do |recent_user|
              .mattrabian-info
                .user-avater
                  = link_to (image_tag recent_user.avatar_address(:medium)), recent_user
                .user-info
                  = link_to recent_user do
                    %span.name= recent_user.name
                  %span.info= 'Recently joined'
                .options
                  - if user_signed_in?
                    - if current_user != recent_user
                      - if !current_user.following?(recent_user)
                        = form_for(current_user.active_relationships.build) do |f|
                          = hidden_field_tag :followed_id, recent_user.id
                          = f.submit "Follow", class: "follow"
                      - else
                        = form_for(current_user.active_relationships.find_by(followed_id: recent_user.id), html: { method: :delete }) do |f|
                          = f.submit "Unfollow", class: "follow"
                    - else
                      = link_to "Settings", edit_user_registration_path, class: 'follow'
                  - else
                    = link_to "Follow", new_user_session_path, class: "follow"

      .col-12.col-sm-12.col-md-8.col-lg-6.feed-col
        .mattrab-feed
          .intro-item
            .intro-item-content
              .intro-item-header
                .i-user-avater
                  = image_tag 'mricon.png'
                .i-user-info
                  %span.name Mattrab Community
                  %span.about Largest students' community in Nepal.
              .intro-item-body
                .welcome
                  = "Namaste! #{!user_signed_in? ? 'Sign in to ask your questions and follow your friends.' : (user_signed_in? and current_user.about.present?) ? 'Look aroud what your friends are doing at Mattrab.' : 'Update your setting to experience the best.'}"
                  -# Happy Basant Panchami 2021! May goddess Saraswati bless you.
          .voted-notes
            - @voted_notes.each do |note|
              .upvoted-note
                .feed-item-header
                  .f-upvoted-avater
                    %span
                      %i.fas.fa-heart
                  .f-upvoted-info
                    = link_to current_user do
                      %span.name= "#{user_signed_in? ? 'Your Favorite Readings' : 'Top Readings'}"
                    %span.asked= "#{user_signed_in? ? 'You thanked for these notes.' : 'These notes are most read.'}"
                .feed-item-body
                  .note.mb-1
                    .note_image.col-lg-5.col-md-12
                      = image_tag note.image.url(:small), class: 'img-note'
                    .note_content.col-lg-7.col-md-12
                      %h3.title.mb-1= truncate note.title, length: 31
                      %p.body.mb-4
                        = truncate sanitize(note.body, tags: ['<h1>', '<h2>', '<h3>', '<a>', '<p>', '<span>', '<div>', '<img>']), length: 180
                .feed-item-actions.btn-group
                  %a.prev-note.u-note-action ❮
                  = link_to note_path(note), class: 'u-note-action' do
                    %i.far.fa-eye
                    Read this Note
                  %a.next-note.u-note-action ❯
                  %p.u-note-info
                    = "Read #{note.view} times"
          = render :partial => "feed", :collection => @feeds if @feeds.present?
        .pagination-nav.is.justify-content-center
          = will_paginate @feeds, renderer: WillPaginate::ActionView::BootstrapLinkRenderer, list_classes: %w(pagination justify-content-center), previous_label: '&laquo;', next_label: '&raquo;', inner_window: 1, outer_window: 0

      .col-12.col-sm-12.col-md-4.col-lg-3.assets-col
        .home-sidebar.sticky-in-desktop
          - if user_signed_in?
            .current-user-info
              .c-user-avater
                = link_to (image_tag current_user.avatar_address(:medium)), current_user
              .c-user-info
                = link_to current_user do
                  %span.name= current_user.name
                %span.info
                  = current_user.role.humanize
                  = '•'
                  = link_to 'Settings', edit_user_registration_path
          .encourage
            - if !user_signed_in?
              %h2.en-title Mattrab Community
              %p.en-message.mx-auto Create, share and learn from the unlimited notes, photos and videos and ask your questions, answer your friends all over Nepal and grow. Create, share and learn.
              .actions
                %a.trigger-sign-in.action-button.mx-auto{"data-toggle" => "modal", :href => "#sign-in"} Join Community, it's free!
            - elsif can? :create, Note
              %h2.en-title Showcase your Knowledge
              %p.en-message.mx-auto Yay! You are creator in Mattrab Community. Share what you have learned around your friends, help them learn like you do and get recognized around the Community.
              .actions
                = link_to new_question_path, class: 'action-button mx-auto mb-2' do
                  %i.far.fa-comment-alt
                  Ask new Question
                = link_to new_note_path, class: 'action-button mx-auto' do
                  %i.far.fa-edit
                  Create Note
            - else
              %h2.en-title Add to your Knowledge
              %p.en-message.mx-auto Not understanding any topic or subjects? Ask your question and get helps form friends around the Community. Answers to your questions can help several later.
              .actions
                = link_to new_question_path, class: 'action-button mx-auto mb-3' do
                  %i.far.fa-comment-alt
                  Ask new Question
                = link_to creator_appeal_path, class: 'action-button mx-auto' do
                  %i.far.fa-edit
                  Be a Creator
